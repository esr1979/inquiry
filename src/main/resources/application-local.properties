# ===================================================================
# Logging para depuración
# ===================================================================
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.jdbc=DEBUG
logging.level.org.springframework.data.jdbc=DEBUG
logging.level.org.springframework.aop.framework.CglibAopProxy=TRACE
logging.level.com.kike.training.inquiry.infrastructure.web.config=DEBUG
debug=false

# ===================================================================
# Configuración de Data Sources (ESTO SE QUEDA IGUAL)
# ===================================================================
spring.datasource.names=DE,GB,ES,IT,FR,IE,GR,ZA
spring.datasource.DE.url=jdbc:h2:file:./h2_dbs/db_de
spring.datasource.DE.username=sa
spring.datasource.DE.password=
spring.datasource.DE.driver-class-name=org.h2.Driver
spring.datasource.GB.url=jdbc:h2:file:./h2_dbs/db_gb
spring.datasource.GB.username=sa
spring.datasource.GB.password=
spring.datasource.GB.driver-class-name=org.h2.Driver
spring.datasource.ES.url=jdbc:h2:file:./h2_dbs/db_es
spring.datasource.ES.username=sa
spring.datasource.ES.password=
spring.datasource.ES.driver-class-name=org.h2.Driver
spring.datasource.IT.url=jdbc:h2:file:./h2_dbs/db_it
spring.datasource.IT.username=sa
spring.datasource.IT.password=
spring.datasource.IT.driver-class-name=org.h2.Driver
spring.datasource.FR.url=jdbc:h2:file:./h2_dbs/db_fr
spring.datasource.FR.username=sa
spring.datasource.FR.password=
spring.datasource.FR.driver-class-name=org.h2.Driver
spring.datasource.IE.url=jdbc:h2:file:./h2_dbs/db_ie
spring.datasource.IE.username=sa
spring.datasource.IE.password=
spring.datasource.IE.driver-class-name=org.h2.Driver
spring.datasource.GR.url=jdbc:h2:file:./h2_dbs/db_gr
spring.datasource.GR.username=sa
spring.datasource.GR.password=
spring.datasource.GR.driver-class-name=org.h2.Driver
spring.datasource.ZA.url=jdbc:h2:file:./h2_dbs/db_za
spring.datasource.ZA.username=sa
spring.datasource.ZA.password=
spring.h2.console.enabled=true
spring.datasource.ZA.driver-class-name=org.h2.Driver

# ===================================================================
# Configuración SSL para HTTPS
# ===================================================================
server.ssl.enabled=true
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-type=PKCS12
# Las contraseñas se leen desde local.env
server.ssl.key-store-password=${server.ssl.keystore-password}
server.ssl.key-alias=springboot
server.ssl.key-password=${server.ssl.key-password}

# =================================================================================
# === INICIO DE LA CONFIGURACIÓN DE SEGURIDAD (CON VARIABLES DE ENTORNO) ===
# =================================================================================
# Se utilizan las variables definidas en el fichero local.env.

# --- 1. Definición del Proveedor de Identidad (Azure AD) ---
spring.security.oauth2.client.provider.azure.tenant-id=${entra.id.tenant-id}
spring.security.oauth2.client.provider.azure.authorization-uri=https://login.microsoftonline.com/${spring.security.oauth2.client.provider.azure.tenant-id}/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.azure.token-uri=https://login.microsoftonline.com/${spring.security.oauth2.client.provider.azure.tenant-id}/oauth2/v2.0/token
spring.security.oauth2.client.provider.azure.jwk-set-uri=https://login.microsoftonline.com/${spring.security.oauth2.client.provider.azure.tenant-id}/discovery/v2.0/keys
spring.security.oauth2.client.provider.azure.user-name-attribute=name

# --- 2. Registro del Cliente Web (El "Portero") ---
spring.security.oauth2.client.registration.azure.provider=azure
spring.security.oauth2.client.registration.azure.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.azure.redirect-uri=${entra.id.redirect-uri}

# ID y secreto de la aplicación CLIENTE ('training-inquiry-client').
spring.security.oauth2.client.registration.azure.client-id=${entra.id.client-id}
spring.security.oauth2.client.registration.azure.client-secret=${entra.id.client-secret}

# Lista de permisos que el cliente (nuestra app) va a solicitar.
spring.security.oauth2.client.registration.azure.scope=openid, profile, offline_access, api://${entra.id.api-audience-id}/access_as_user

# --- 3. Configuración del Servidor de Recursos (La API) ---
# El 'issuer' usa el Tenant ID que ya hemos externalizado.
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://login.microsoftonline.com/${spring.security.oauth2.client.provider.azure.tenant-id}/v2.0

# El 'audience' del token debe ser el ID de la aplicación API ('training-inquiry').
spring.security.oauth2.resourceserver.jwt.audience=${entra.id.api-audience-id}

# =================================================================================
# === FIN DE LA CONFIGURACIÓN DE SEGURIDAD ===
# =================================================================================
