plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.kike.training'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Core Spring Boot Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Seguridad de Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Data JDBC para la persistencia
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

	// Spring AOP para los aspectos
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Dependencia de test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// Para asegurar la compatibilidad con JUnit 5 en tests de Spring Boot
	testImplementation 'org.springframework.security:spring-security-test' // Para testear seguridad
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Añadimos la BBDD h2.
	runtimeOnly 'com.h2database:h2'

	// Plantillas HTML con Thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	// Para usar Thymeleaf con Spring Security (si necesitas directivas de seguridad en tus plantillas)
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	// DevTools (opcional, para reinicios rápidos en desarrollo)
	// 'runtimeOnly' significa que se incluye en el classpath de ejecución pero no en el de compilación.
	// 'developmentOnly' es un nuevo ámbito en Spring Boot 3.x para devtools, lo que lo hace aún más explícito.
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Flyway
	implementation 'org.flywaydb:flyway-core'
}

tasks.named('test') {
	useJUnitPlatform()
}
